server:
  port: 9001
  error:
    path: /error

#backend:
#  host: https://v2.quickmall24.com/  # Backend host
#  port: 80         # Backend port
#  error:
#    path: /error

local-auth-backend: https://a0d6-66-253-183-231.ngrok-free.app

spring:
  main:
    allow-bean-definition-overriding: true
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 50MB
  datasource:
    url: jdbc:mysql://us.umiuni.com:3306/umi_shop
    username: root
    password: Voidmain4Voidmain4@
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  sql:
    init:
      platform: mysql
  redis:
    host: 127.0.0.1
    port: 6379
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
    listener:
      simple:
        concurrency: 1
        max-concurrency: 1
        acknowledge-mode: manual
        prefetch: 1
  security:
    oauth2:
      client:
        mode: 'sandbox'
        registration:
          paypal:
            clientId: AYQwg1YezCe92zHxmpD8Y8q6M3_AbaGYpjs--ATI3WZzYBdcupomPY3L5lO91mdnv48iYjD6FQ41_QwE
            clientSecret: ECbVzUVjhR2Pu_x5PYeXGvmcBnQWK-9sJe1T5D-TlfwJwuXplM666HmJH9A8pvvjkU0UgvftWkSzw23b
            redirectUri: ${local-auth-backend}/login/oauth2/code/paypal
            authorizationGrantType: authorization_code
        #            scope: openid, email, profile
        provider:
          paypal:
            authorizationUri: https://www.sandbox.paypal.com/signin/authorize
            tokenUri: https://api.sandbox.paypal.com/v1/oauth2/token
            userInfoUri: https://api.sandbox.paypal.com/v1/identity/oauth2/userinfo
            userNameAttribute: name

security:
  jwt:
    token:
      secret-key: MUUqkTMQiACw7o84UUjKy8mYT4DtYgjNfvqu/VbyxZw=
      expire-length: 3600000 # 1 hour

springfox:
  documentation:
    swagger:
      ui:
        base-url: /swagger-ui.html

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
management:
  endpoints:
    web:
      exposure:
        include: mappings

stripe:
  secret:
    key: sk_test_HNULuXYU2Y2e6HFczm6E5Nd6

# host url for prod env
prod-backend: https://v2.quickmall24.com
prod-frontend: https://www.quickmall24.com
# host url for local dev
local-backend: http://localhost:9001
local-frontend: http://localhost:3000

paypal:
  client:
    id: AYQwg1YezCe92zHxmpD8Y8q6M3_AbaGYpjs--ATI3WZzYBdcupomPY3L5lO91mdnv48iYjD6FQ41_QwE #AWhLD4_pmHlrCpHJSSKobJ4nwbwy_e16mcgbtrL_M5DzBaJk9zj84QYazMoy5TB7htSmjry7_ArOE9yU
    secret: ECbVzUVjhR2Pu_x5PYeXGvmcBnQWK-9sJe1T5D-TlfwJwuXplM666HmJH9A8pvvjkU0UgvftWkSzw23b #EGVLVd0YufvNfz8ID2uN_mGRubofoTt2oZNy7CaYLGx2vHPCryZ5PuIve7LpLXxKQ7tDClvFePHBS7lN
  mode: 'sandbox'
  redirect:
    uri: ${local-auth-backend}/api/v1/suppliers/v2/callback # ${local-auth-backend}  # ${prod-backend}
  frontend:
    base:
      uri: ${local-frontend} # ${local-frontend}  # ${prod-frontend}
    redirect:
      uri: ${local-frontend}/supplier-ims/ # ${local-frontend}  # ${prod-frontend}
  referral:
    uri: ${prod-backend}/api/v1/suppliers/refer # ${local-backend} # ${prod-backend}
  login-success-redirect:
    uri: ${local-frontend}  # local-frontend

#    id: ASWE1Q8AfwFxHoTDbB8tanMwQB8qRxb0i72hdPMD23RGzhNqY2DQoClXqQv8ONJWGPi_cy5ro5y_6tHB
#    secret: EAxzPdtbxhyDw3mmSCRvcputnBrx5Ko_7a73fhfXNP5IRCDYoFExYJS5Qi--OhBTdEv0h0Cat7T_IZXj

#logging:
#  level:
#    org:
#      hibernate:
#        type:
#          descriptor:
#            sql: trace
#      springframework:
#        security: DEBUG


# Define the names of your RabbitMQ queues
order-status:
  create:
    name: order_status_create_queue
#inventory:
#  lock:
#    queue:
#      name: inventory_lock_queue
#  reduce:
#    queue:
#      name: inventory_reduction_queue
#order:
#  queue:
#    name: order_queue

rabbitmq:
  queues:
    order_process:
      name: order_queue
      ttl: 100000  # 1分钟的TTL: 60000  1 minute in milliseconds
      exchange:
        name: order_queue_exchange
      routing-key: order_queue_routing
    inventory_lock_process:
      name: inventory_lock_queue
      ttl: 100000  # time-to-live for messages in the inventory_lock_queue
      exchange:
        name: inventory_lock_queue_exchange # exchange used to route messages to the queue
      routing-key: inventory_lock_queue_routing # routing key used with the exchange to route messages to the queue
    inventory_reduction_process:
      name: inventory_reduction_queue
      ttl: 100000  # time-to-live for messages in the inventory_lock_queue
      exchange:
        name: inventory_reduction_queue_exchange # exchange used to route messages to the queue
      routing-key: inventory_reduction_queue_routing # routing key used with the exchange to route messages to the queue
  dlx:
    queue:
      name: order_dlx_queue
    exchange:
      name: order_dlx_exchange
    routing-key: order_dlx

product:
  image:
    storage:
      path: src/main/resources/image/storage

# AWS S3 config
cloud:
  aws:
    region:
      static: us-east-1
aws:
  s3:
    bucket-name: umi-mall-product-images
